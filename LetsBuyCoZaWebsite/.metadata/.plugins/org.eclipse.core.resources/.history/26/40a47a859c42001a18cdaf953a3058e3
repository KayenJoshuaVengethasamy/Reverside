package com.WebService.LetsBuy.service;

import org.springframework.beans.factory.annotation.Autowired;

import com.WebService.LetsBuy.model.Product;
import com.WebService.LetsBuy.repository.ProductRepository;
import com.WebService.LetsBuy.web.dto.ProductRegistrationDto;

public class ProductServiceImpl implements UserService {

	@Autowired
	private ProductRepository productRepository;

	public Product findByUserEmail(String productName) {
		return productRepository.findByProductName(productName);
	}

	public Product save(ProductRegistrationDto registration) {
		Product product = new Product();
		product.setProductDescription(registration.getProductDescription());
		product.setProductImage(registration.getProductImage());
		product.setProductName(registration.getProductName());
product.setProductPrice(registration.getProductName());		
//	
//		user.setUserFirstName(registration.getFirstName());
//		user.setUserLastName(registration.getLastName());
//		user.setUserEmail(registration.getEmail());
//		user.setUserPassword(passwordEncoder.encode(registration.getPassword()));
//		user.setRoles(Arrays.asList(new Role("ROLE_USER")));
//		return userRepository.save(user);
//	}
//
//	@Override
//	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
//		User user = userRepository.findByUserEmail(email);
//		if (user == null) {
//			throw new UsernameNotFoundException("Invalid username or password.");
//		}
//		return new org.springframework.security.core.userdetails.User(user.getUserEmail(), user.getUserPassword(),
//				mapRolesToAuthorities(user.getRoles()));
//	}
//
//	private Collection<? extends GrantedAuthority> mapRolesToAuthorities(Collection<Role> roles) {
//		return roles.stream().map(role -> new SimpleGrantedAuthority(role.getRoleName())).collect(Collectors.toList());
//	}
}
}