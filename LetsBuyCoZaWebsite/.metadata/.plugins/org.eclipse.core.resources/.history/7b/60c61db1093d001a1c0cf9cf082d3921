package com.WebService.LetsBuy.service;

import java.util.Arrays;
import java.util.Collection;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.security.core.userdetails.*;
import com.WebService.LetsBuy.model.Role;
import com.WebService.LetsBuy.model.User;
import com.WebService.LetsBuy.repository.UserRepository;
import com.WebService.LetsBuy.web.dto.UserRegistrationDto;


@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private BCryptPasswordEncoder passwordEncoder;

    public User findByEmail(String email) {
        return userRepository.findByEmail(email);
    }

    public User save(UserRegistrationDto registration) {
        User user = new User();
        user.setFirstName(registration.getFirstName());
        user.setLastName(registration.getLastName());
        user.setEmail(registration.getEmail());
        user.setPassword(passwordEncoder.encode(registration.getPassword()));
        user.setRoles(Arrays.asList(new Role("ROLE_USER")));
        return userRepository.save(user);
    
    
    }
    
    @Override
    public userDetails loadUserByUsername (String email) throws UsernameNotFoundException{
    	User user = userRepository.findByEmail(email);
    	if (user == null) {
    		throw new UsernameNotFoundException("invalid username or password");
    	}
    	return User(user.getEmail(), user.getPassword(), mapRolesTo
    }
}